// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebScraper.Data;

#nullable disable

namespace solarmhc.Models.Migrations
{
    [DbContext(typeof(SolarMHCDbContext))]
    [Migration("20240620220940_Seedingv2")]
    partial class Seedingv2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WebScraper.Models.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "LG"
                        },
                        new
                        {
                            Id = 2,
                            Name = "SolarEdge"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Sunny"
                        },
                        new
                        {
                            Id = 4,
                            Name = "APS"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Huawei"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Fronius"
                        });
                });

            modelBuilder.Entity("WebScraper.Models.InverterType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Location")
                        .HasColumnType("int");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("RatedCapacity")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ModelId");

                    b.ToTable("InverterTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Location = 2,
                            ModelId = 2,
                            Notes = "SolarEdge",
                            RatedCapacity = 20000m
                        },
                        new
                        {
                            Id = 2,
                            Location = 2,
                            ModelId = 3,
                            Notes = "Sunny",
                            RatedCapacity = 24000m
                        },
                        new
                        {
                            Id = 3,
                            Location = 2,
                            ModelId = 4,
                            Notes = "APS",
                            RatedCapacity = 1000m
                        },
                        new
                        {
                            Id = 4,
                            Location = 2,
                            ModelId = 5,
                            Notes = "Huawei",
                            RatedCapacity = 24000m
                        },
                        new
                        {
                            Id = 5,
                            Location = 2,
                            ModelId = 6,
                            Notes = "Fronius",
                            RatedCapacity = 23955m
                        });
                });

            modelBuilder.Entity("WebScraper.Models.Model", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Models");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 1,
                            Name = "N2T-A5"
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 2,
                            Name = "SE20KUS"
                        },
                        new
                        {
                            Id = 3,
                            BrandId = 3,
                            Name = "SUNNY TRIPOWER 24000TL-US"
                        },
                        new
                        {
                            Id = 4,
                            BrandId = 4,
                            Name = "1000YC"
                        },
                        new
                        {
                            Id = 5,
                            BrandId = 5,
                            Name = "25KTL inverter"
                        },
                        new
                        {
                            Id = 6,
                            BrandId = 6,
                            Name = "SYMO 24.0-3-480"
                        });
                });

            modelBuilder.Entity("WebScraper.Models.PowerIntake", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("KW")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SolarSegmentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<double>("Utilization")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("SolarSegmentId");

                    b.ToTable("PowerIntakes");
                });

            modelBuilder.Entity("WebScraper.Models.SolarSegment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("InstallationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InverterTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Location")
                        .HasColumnType("int");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("RatedCapacity")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("InverterTypeId");

                    b.HasIndex("ModelId");

                    b.ToTable("SolarSegments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            InverterTypeId = 1,
                            Location = 1,
                            ModelId = 1,
                            Name = "SolarEdge",
                            Notes = "Field Segment 3",
                            RatedCapacity = 385m
                        },
                        new
                        {
                            Id = 2,
                            InverterTypeId = 2,
                            Location = 1,
                            ModelId = 1,
                            Name = "Sunny",
                            Notes = "Field Segment 4",
                            RatedCapacity = 385m
                        },
                        new
                        {
                            Id = 3,
                            InverterTypeId = 3,
                            Location = 1,
                            ModelId = 1,
                            Name = "APS",
                            Notes = "Field Segment 2",
                            RatedCapacity = 385m
                        },
                        new
                        {
                            Id = 4,
                            InverterTypeId = 4,
                            Location = 1,
                            ModelId = 1,
                            Name = "Huawei",
                            Notes = "Field Segment 1",
                            RatedCapacity = 385m
                        },
                        new
                        {
                            Id = 5,
                            InverterTypeId = 5,
                            Location = 1,
                            ModelId = 1,
                            Name = "Fronius",
                            Notes = "Field Segment 5",
                            RatedCapacity = 385m
                        });
                });

            modelBuilder.Entity("WebScraper.Models.InverterType", b =>
                {
                    b.HasOne("WebScraper.Models.Model", "Model")
                        .WithMany()
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Model");
                });

            modelBuilder.Entity("WebScraper.Models.Model", b =>
                {
                    b.HasOne("WebScraper.Models.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("WebScraper.Models.PowerIntake", b =>
                {
                    b.HasOne("WebScraper.Models.SolarSegment", "SolarSegment")
                        .WithMany()
                        .HasForeignKey("SolarSegmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SolarSegment");
                });

            modelBuilder.Entity("WebScraper.Models.SolarSegment", b =>
                {
                    b.HasOne("WebScraper.Models.InverterType", "InverterType")
                        .WithMany()
                        .HasForeignKey("InverterTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebScraper.Models.Model", "Model")
                        .WithMany()
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InverterType");

                    b.Navigation("Model");
                });
#pragma warning restore 612, 618
        }
    }
}
